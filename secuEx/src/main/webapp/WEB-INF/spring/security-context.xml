<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	
	
	<bean id="customAccessDenied" class="org.salem.security.CustomAccessDeniedHandler"></bean>
	<!-- <bean id="customPasswordEncoder" class="org.salem.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="customLoginSuccess" class="org.salem.security.CustomLoginSuccessHandler"></bean>
	
	<bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		
	</bean>
	
	<security:http>
	  <security:intercept-url pattern="/sample/all" access="permitAll"/>
	  
	  <security:intercept-url pattern="/sample/member" 
	    access="hasRole('ROLE_MEMBER')"/>

	  <security:intercept-url pattern="/sample/admin" 
	    access="hasRole('ROLE_ADMIN')"/>
	  	
	  	  
	  <security:form-login login-page="/customLogin" 
	    authentication-success-handler-ref="customLoginSuccess"
	    authentication-failure-handler-ref="customLoginSuccess"/>
	  
	  <security:logout logout-url="/customLogout" invalidate-session="true" />
	  
	  <!-- <security:access-denied-handler error-page="/accessError" /> -->
	  <security:access-denied-handler ref="customAccessDenied"/>
	  
	</security:http>
	
	<security:authentication-manager>
	  <security:authentication-provider>
	  
	  	<security:jdbc-user-service 
	  		data-source-ref="dataSource"
	  		users-by-username-query="select userid username, userpw password, enabled from tbl_member where userid= ? "
	  		authorities-by-username-query="select userid username, auth authority from tbl_member_auth where userid= ? "
	  	/>
	  	
	  	<security:password-encoder ref="bcryptEncoder"></security:password-encoder>
	  	
	  	<!-- <security:password-encoder ref="customPasswordEncoder"></security:password-encoder> -->

	  </security:authentication-provider>
	
	</security:authentication-manager>
	
	<context:component-scan base-package="org.salem.security"></context:component-scan>
	
</beans>



